<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:retail-omnichannel-experience-api="http://www.mulesoft.org/schema/mule/retail-omnichannel-experience-api" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/retail-omnichannel-experience-api http://www.mulesoft.org/schema/mule/retail-omnichannel-experience-api/current/mule-retail-omnichannel-experience-api.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="54d1b6ee-f3fa-46af-885b-ce5c44d4a872" >
		<http:listener-connection host="0.0.0.0" port="${https.port}" protocol="HTTPS" tlsContext="TLS_Context"/>
		<http:listener-interceptors >
			<http:cors-interceptor allowCredentials="true">
				<http:origins >
					<http:public-resource />
				</http:origins>
			</http:cors-interceptor>
		</http:listener-interceptors>
	</http:listener-config>
	<http:request-config name="HTTP_Request_configuration" doc:name="HTTP Request configuration" doc:id="621fc208-2944-4753-9434-510cd4b9b499" >
		<http:request-connection protocol="HTTPS" host="graph.facebook.com" port="443" />
	</http:request-config>
	<retail-omnichannel-experience-api:config name="Retail_Omnichannel_Experience_API_Config" doc:name="Retail Omnichannel Experience API Config" doc:id="7c5077d9-b66b-4d48-b8e2-d5b9b690ece8" property_host="${omni-experience-api.host}" property_port="${omni-experience-api.port}" property_basePath="${omni-experience-api.basePath}" property_protocol="${omni-experience-api.protocol}" />
	<configuration-properties doc:name="Configuration properties" doc:id="64d4a0a4-e707-4fd9-aec8-b1e37f526a5f" file="common.properties" />
	<configuration-properties doc:name="Configuration properties" doc:id="91fcfd57-2f93-4f86-b6c5-e9e4712965f4" file="mule.${mule.env}.properties" />
	<configuration-properties doc:name="Configuration properties" doc:id="9386eb02-1c76-4900-b5b1-175598184eb7" file="mule-artifact.properties" />
	<os:object-store name="application_data" doc:name="Object store" doc:id="36e18fcf-d99f-499e-a0a0-90cac5dc5946" />
	<tls:context name="TLS_Context" doc:name="TLS Context" doc:id="725c01b9-93fe-4ab1-a3ce-d2e8b61efc9a" >
		<tls:key-store type="jks" path="${keystore.location}" alias="${key.alias}" keyPassword="${key.password}" password="${keystore.password}"/>
	</tls:context>
	<flow name="webhook-flow" doc:id="ceb150ca-9bdf-47a5-8a9a-292167527c48" >
		<http:listener doc:name="/webhook" doc:id="b7dbb6a9-08d6-4a8a-802a-a2b3ed6d2d5e" config-ref="HTTP_Listener_config" path="/webhook"/>
		<choice doc:name="Operation?" doc:id="c048cb38-e288-4429-a3c4-7299c55d8fc9" >
			<when expression="#[attributes.method == 'POST']" >
				<ee:transform doc:name="transform input to java and save psid" doc:id="e268a2e1-43a1-4bf0-8d5c-d0e50ecdb610" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="psid" ><![CDATA[%dw 2.0
output application/java
---
payload.entry.messaging[0].sender.id[0]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<choice doc:name="Some message?" doc:id="48fafdb0-f716-4775-b9a5-6ec3839c3560" >
					<when expression="#[payload.entry[0].messaging[0].message != null]">
						<choice doc:name="What action to perform?" doc:id="49644500-eaf3-4bfe-aa38-7a4c2da2a909" >
							<when expression='#[payload.entry[0].messaging[0].message.text contains "Hi"]' >
								<flow-ref doc:name="greeting-response" doc:id="6b622fac-b033-4370-a243-ad7a4e9c8956" name="greeting-response"/>
							</when>
							<when expression='#[payload.entry[0].messaging[0].message.text contains "order"]' >
								<flow-ref doc:name="orders-response" doc:id="6e85d4a8-542d-4b1a-9ca3-0226f6bccfd4" name="orders-response"/>
							</when>
							<when expression='#[payload.entry[0].messaging[0].message.text contains "user"]' >
								<flow-ref doc:name="logout-response" doc:id="34d617bc-930d-4c63-84d6-7a4eea24bf47" name="logout-response"/>
							</when>
							<otherwise>
								<flow-ref doc:name="echo-response" doc:id="1187adea-cc72-4fd8-81c7-e5fa971cd531" name="echo-response"/>
							</otherwise>
						</choice>
					</when>
					<otherwise>
						<logger level="INFO" doc:name="Logger" doc:id="c11b7595-0c9e-4c9c-aeb0-80576cd19715" message="POSTBACK - #[payload]"/>
					</otherwise>
				</choice>
			</when>
			<otherwise >
				<set-payload value="#[attributes.queryParams.'hub.challenge']" doc:name="Respond with challenge" doc:id="fe311edb-0fad-4fc9-8dc4-025ccd455b7a" />
			</otherwise>
		</choice>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="0650ce4f-ed06-491e-a8a7-b1282f1d7171" >
				<ee:transform doc:name="Error Response Message" doc:id="eaa7cb57-3ad1-4794-8261-182be57a50bd" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	recipient: {
		(id: if(payload.entry.messaging[0].sender.id[0] == null) vars.customerData.psid else payload.entry.messaging[0].sender.id[0])
	},
	message: {
		text: "There was an error with your request, please review your user configuration on the Anypoint Store."
	}
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<flow-ref doc:name="Call-Facebook-API" doc:id="bd6c3534-1f63-428f-8718-b12459349c92" name="Call-Facebook-API"/>
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="Call-Facebook-API" doc:id="ce77c6cc-b178-4f50-ac0f-c09fa5934f72" >
		<set-variable value='#[p("access_token")]' doc:name="save access_token to variable" doc:id="58c5b5f0-6af8-4810-9bd6-9e156447a60b" variableName="accessToken"/>
		<logger level="INFO" doc:name="Logger" doc:id="908e880c-a5ea-4e96-9fe7-725bf8f2aa8b" message="#[output application/json --- payload]"/>
		<http:request method="POST" doc:name="Call Facebook Send API" doc:id="265769a4-eb63-4eee-81d9-69cec09045bc" config-ref="HTTP_Request_configuration" path="me/messages">
			<http:query-params ><![CDATA[#[output applicaton/java
---
{
	"access_token" : vars.accessToken
}]]]></http:query-params>
		</http:request>
	</flow>
	<flow name="echo-response" doc:id="83b28a84-1c0c-4b74-bae7-a5030eb435ad" >
		<ee:transform doc:name="Response echo message" doc:id="da42a5e3-b4df-4f54-a986-048f90382fe3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	recipient: {
		id: vars.psid
	},
	message: {
		text: if (payload.entry.messaging[0].message.text[0] !=null) "You can ask for your last order or for authenticating a different user."  else 'No Message'
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="Call-Facebook-API" doc:id="d7227403-f332-4322-b8d1-fd1562a60ad3" name="Call-Facebook-API"/>
	</flow>
	<flow name="list-response" doc:id="3bf90b96-e50d-40e5-9e59-3fc87db224e2" >
		<ee:transform doc:name="Response list message" doc:id="c78f8e2e-836b-4ee8-ade4-c69bf3407298" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	recipient: {
		id: vars.customerData.psid
	},
	message: {
	      text: "Here is your last order:\n"
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="Call-Facebook-API" doc:id="acc24300-12b3-4a86-8e88-4670da652246" name="Call-Facebook-API"/>
	</flow>
	<flow name="greeting-response" doc:id="d3295ad5-0ded-4719-b20c-3bff210d70cd" >
		<ee:transform doc:name="Response greeting message" doc:id="13e6c209-7af4-4205-856e-4e222ecd575c" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	recipient: {
		id: payload.entry.messaging[0].sender.id[0]
	},
	message: {
		text: if (payload.entry.messaging[0].message.text[0] !=null) ("Hi, How can we help you today?")  else 'No Message'
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="Call-Facebook-API" doc:id="b7410ae0-b995-4f9d-8817-744c87a27b2f" name="Call-Facebook-API"/>
	</flow>
	<flow name="create-orders-response" doc:id="e437108d-b437-45bf-9c65-f35a1823a9e9" >
		<retail-omnichannel-experience-api:get-orders-by-customer-id doc:name="Get orders by customer id" doc:id="0b516fbd-8a1e-4fcf-aa34-51a7cc42836c" config-ref="Retail_Omnichannel_Experience_API_Config" customer-id="#[vars.customerData.customerId]"/>
		<choice doc:name="Some orders?" doc:id="dbb592f4-cf2a-462e-959d-785978e36272" >
			<when expression="#[sizeOf(payload) &gt; 0]" >
				<ee:transform doc:name="Extract data about last order" doc:id="9d34c1f1-fdc4-404a-b8b7-4a46cfbca6fd" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
if (payload[0].orderItems.shipmentItems == null and payload[0].orderItems.partnersItems == null) false   
	else true	]]></ee:set-payload>
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="lastOrder" ><![CDATA[%dw 2.0
output application/java
---
using(last = payload[0]){
	orderId: last.identifier,
    customerId: last.customerId,
    subtotal: last.subtotal as Number,
    shippingCost: last.shippingCost as Number,
    totalTax: last.totalTax as Number,
    total: last.total as Number,
    orderItems: {
    	(pickupItems: if(last.orderItems.pickupItems != null ) last.orderItems.pickupItems else []),
    	(shipmentItems: if (last.orderItems.shipmentItems !=null) last.orderItems.shipmentItems else []),
    	(partnersItems: if (last.orderItems.partnersItems != null) last.orderItems.partnersItems else []) 
    },
    shippingAddress: last.shippingAddress 
}]]></ee:set-variable>
						<ee:set-variable variableName="listItems" ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-variable>
						<ee:set-variable variableName="partners" ><![CDATA[%dw 2.0
output application/java
---
if(payload[0].orderItems.partnersItems != null)
(payload[0].orderItems.partnersItems.location.locationId distinctBy ($))
else []]]></ee:set-variable>
						<ee:set-variable variableName="stores" ><![CDATA[%dw 2.0
output application/java
---
if(payload[0].orderItems.pickupItems != null)
(payload[0].orderItems.pickupItems.location.locationId distinctBy ($))
else []
]]></ee:set-variable>
						<ee:set-variable variableName="listPartners" ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-variable>
						<ee:set-variable variableName="listStores" ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<foreach doc:name="For Each" doc:id="820b1d5c-ec7a-48bf-8bad-543c885be0b9" collection="#[vars.partners]">
					<retail-omnichannel-experience-api:get-partner-by-partner-id doc:name="Get partner by partner id" doc:id="cda7bb1a-fa83-4826-83ab-846fe8e6b4a3" partner-id="#[payload]" config-ref="Retail_Omnichannel_Experience_API_Config"/>
					<ee:transform doc:name="Add Partner to List" doc:id="9c1e9c84-9fc9-41d0-80b4-20b82b3ec998" >
						<ee:message >
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="listPartners" ><![CDATA[%dw 2.0
output application/java
---
vars.listPartners + payload]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
				</foreach>
				<foreach doc:name="For Each" doc:id="b19aae2f-3685-4877-9f36-650a7472aec7" collection="#[vars.stores]">
					<retail-omnichannel-experience-api:get-store-by-store-id doc:name="Get store by store id" doc:id="89e9bbc2-51ae-4882-83f4-d6a1d5117dbb" config-ref="Retail_Omnichannel_Experience_API_Config" store-id="#[payload]"/>
					<ee:transform doc:name="Add Store to list" doc:id="2daa11d4-49b0-423e-ab85-e0e855f535c6" >
						<ee:message >
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="listStores" ><![CDATA[%dw 2.0
output application/java
---
vars.listStores + payload]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
				</foreach>
				<choice doc:name="Are Shipment and Partners items available?" doc:id="e0817a17-487c-4056-a733-5c1eef235948" >
					<when expression="#[payload == true]" >
						<flow-ref doc:name="list-response" doc:id="a7cdfd8d-bcbf-47eb-a0b0-fd02763b77e4" name="list-response"/>
						<retail-omnichannel-experience-api:get-customer-by-customer-id doc:name="Get customer by customer id" doc:id="39ddc4b0-b654-45a5-a09a-57d773745f69" config-ref="Retail_Omnichannel_Experience_API_Config" customer-id="#[vars.lastOrder.customerId]"/>
						<set-variable value='#[payload.firstName ++ " " ++ payload.lastName]' doc:name="Set recipient" doc:id="4ecafe01-9ba2-4872-b0c4-977f3cab1c2c" variableName="recipient"/>
						<foreach doc:name="For Each Partner Item" doc:id="77b639e1-58d2-4cdd-8e6a-724da570bcde" collection="#[vars.lastOrder.orderItems.partnersItems]">
							<ee:transform doc:name="Add item to listItems" doc:id="b0f703ce-cd23-46b7-b78c-effe9b9356f3" >
								<ee:message >
								</ee:message>
								<ee:variables >
									<ee:set-variable variableName="listItems" ><![CDATA[%dw 2.0
output application/java
---
vars.listItems + {
	productId: payload.productId,
	variantId: payload.orderItemId,
	productName: payload.productName,
	quantity: payload.quantity as Number,
	price: payload.price as Number,
	(vars.listPartners filter ($.partnerId == payload.location.locationId) map {
		locationDetails: "Shipped from Partner " ++ $.name ++ " to your address"		 
})}]]></ee:set-variable>
								</ee:variables>
							</ee:transform>
						</foreach>
						<foreach doc:name="For Each Pickup Item" doc:id="c301a019-5e83-47d4-ab53-5819baea1038" collection="#[vars.lastOrder.orderItems.pickupItems]">
							<ee:transform doc:name="Add item to listItems" doc:id="6aa729af-daaf-4d2b-b391-ea6e953c12d6" >
								<ee:message >
								</ee:message>
								<ee:variables >
									<ee:set-variable variableName="listItems" ><![CDATA[%dw 2.0
output application/java
---
vars.listItems + {
	productId: payload.productId,
	variantId: payload.orderItemId,
	productName: payload.productName,
	quantity: payload.quantity as Number,
	price: payload.price as Number,
	(vars.listStores filter ($.storeId == payload.location.locationId) map {
		locationDetails: "Pick up in: " ++ $.name ++ ", " ++ $.address.address ++ ", " ++ $.address.city	 
})}]]></ee:set-variable>
								</ee:variables>
							</ee:transform>
						</foreach>
						<foreach doc:name="For Each Shipment Item" doc:id="1225c3e4-9319-4ae7-8d3b-70e85f4ed579" collection="#[vars.lastOrder.orderItems.shipmentItems]">
							<ee:transform doc:name="Add item to listItems" doc:id="e27fafc8-fc96-4e69-ba11-dede30109ed9" >
								<ee:message >
								</ee:message>
								<ee:variables >
									<ee:set-variable variableName="listItems" ><![CDATA[%dw 2.0
output application/java
---
vars.listItems + {
	productId: payload.productId,
	variantId: payload.orderItemId,
	productName: payload.productName,
	quantity: payload.quantity as Number,
	price: payload.price as Number,
	locationDetails: "Shipped to your address"
}]]></ee:set-variable>
								</ee:variables>
							</ee:transform>
						</foreach>
						<ee:transform doc:name="Response Message" doc:id="53783a56-7974-484f-8855-a69455851ade" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  recipient:{
    id: vars.customerData.psid
  },
  message:{
    attachment:{
      "type":"template",
      payload:{
        template_type: "receipt",
        recipient_name: vars.recipient,
        order_number: vars.lastOrder.orderId,
        currency:"USD",
        payment_method:"Anypoint Bank",             
        address:{
          street_1: vars.lastOrder.shippingAddress.address,
          city: vars.lastOrder.shippingAddress.city,
          postal_code:vars.lastOrder.shippingAddress.postalCode,
          state: upper(vars.lastOrder.shippingAddress.state[0 to 1]),
          country: upper(vars.lastOrder.shippingAddress.country[0 to 1])
        },
        summary:{
          subtotal: vars.lastOrder.subtotal,
          shipping_cost: vars.lastOrder.shippingCost,
          total_tax: vars.lastOrder.totalTax,
          total_cost: vars.lastOrder.total
        },
        elements: vars.listItems map
          {
            title: $.productName,
            subtitle: $.locationDetails,
            quantity: $.quantity, 
            price: $.price, 
            currency: "USD",
            image_url: "https://cdn.pixabay.com/photo/2016/04/07/18/57/play-1314463_960_720.png"
          }
      }
    }
  }
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Logger" doc:id="dffaa44e-4206-4b95-8505-0f493ce98062" message="Order only for PICKUP"/>
						<foreach doc:name="For Each Pickup item" doc:id="50f3989c-3264-4a10-80b2-4136921ead6b" collection="#[vars.lastOrder.orderItems.pickupItems]">
							<ee:transform doc:name="Add item to listItems" doc:id="e621f4e9-adec-4314-b03d-17ec4b15aabd" >
								<ee:message >
								</ee:message>
								<ee:variables >
									<ee:set-variable variableName="listItems" ><![CDATA[%dw 2.0
output application/java
---
vars.listItems + {
	productId: payload.productId,
	variantId: payload.orderItemId,
	productName: payload.productName,
	quantity: payload.quantity as Number,
	price: payload.price as Number,
	(vars.listStores filter ($.storeId == payload.location.locationId) map {
		locationDetails: "Pick up in: " ++ $.name ++ ", " ++ $.address.address ++ ", " ++ $.address.city	 
})}]]></ee:set-variable>
								</ee:variables>
							</ee:transform>
						</foreach>
						<ee:transform doc:name="Response message" doc:id="aaa28c84-6bca-4ef9-903d-dbc779848877" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
  recipient:{
    id: vars.customerData.psid
  },
  message:{
    attachment:{
      "type":"template",
      payload:{
        template_type: "receipt",
        recipient_name: "Stores for pickup",
        order_number: vars.lastOrder.orderId,
        currency:"USD",
        payment_method:"Anypoint Bank",             
        summary:{
          subtotal: vars.lastOrder.subtotal,
          shipping_cost: vars.lastOrder.shippingCost,
          total_tax: vars.lastOrder.totalTax,
          total_cost: vars.lastOrder.total
        },
        elements: vars.listItems map
          {
            title: $.productName,
            subtitle: $.locationDetails,
            quantity: $.quantity as Number, 
            price: $.price as Number, 
            currency:"USD",
            image_url: "https://cdn.pixabay.com/photo/2016/04/07/18/57/play-1314463_960_720.png"
          }
      }
    }
  }
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</otherwise>
				</choice>
			</when>
			<otherwise >
				<ee:transform doc:name="Response Message" doc:id="43d10236-55ea-4473-a080-a90e97300c73" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	recipient: {
		id: vars.customerData.psid
	},
	message: {
		  
	      text: 
	      		"\nYou have no active orders. If you want to check for another user, please let me know."
	}
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<flow-ref doc:name="Call-Facebook-API" doc:id="8393a0dc-2fc6-454e-a9ac-f0f519f538b0" name="Call-Facebook-API"/>
	</flow>
	<flow name="orders-response" doc:id="061fea05-a763-405b-a7e7-88b4bd8ac33d" >
		<os:contains doc:name="Check presence of customer data by PSID" doc:id="03c1de28-7957-44aa-ba88-d3dec03468e2" objectStore="application_data" key="#[vars.psid]"/>
		<choice doc:name="Is messenger user record present?" doc:id="51ffb55a-766d-4fe0-a847-4199190a1196" >
			<when expression="#[payload == true]" >
				<os:retrieve doc:name="Retrieve by PSID to var customerData" doc:id="10c17ecc-a137-41f7-b8da-65a97a05b1b1" key="#[vars.psid]" objectStore="application_data" target="customerData"/>
				<flow-ref doc:name="create-orders-response" doc:id="85456879-a498-4e2e-aef9-fd9ee813c561" name="create-orders-response"/>
				<ee:transform doc:name="Response message" doc:id="45a2895f-c254-4f6d-b13d-7ac20be6cf86" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	recipient: {
		id: vars.psid
	},
	message: {
		  
	      text:  "Is there anything else I can help you with?"
	      		
	}
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="User must login first" doc:id="2886b9f3-b828-410f-afc4-19958bda2474" message="Going to log in user"/>
				<ee:transform doc:name="Reply with login link" doc:id="ee8921de-83f1-4e12-840d-7e966079aa49" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from dw::core::Binaries
var stateRaw = {
	psid: vars.psid,
	action: "order"
}
var stateString = write(stateRaw, "application/json")
var stateBase64UrlEncoded = toBase64(stateString)
var loginUrl = p('user.login.url')
---
{
	recipient: {
		id: vars.psid
	},
	message:{
    	attachment:{
			"type":"template",
			payload:{
			    template_type:"button",
				text: "Please provide information about your user following the link below.",
				buttons:[{
			    	"type":"web_url",
					"url":"$(loginUrl)?origin=bot&state=$(stateBase64UrlEncoded)",
					"title":"Login or Change user"
			    }]
			}
    	}
    }
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<flow-ref doc:name="Call-Facebook-API" doc:id="9434834f-5dbe-4355-a743-4e8cbce084df" name="Call-Facebook-API"/>
	</flow>
	<flow name="logout-response" doc:id="7c189c11-6619-42fd-a322-b392b197e840" >
		<os:contains doc:name="Contains" doc:id="cb25ef9c-35e8-4385-a7db-55f320265b6a" key="#[vars.psid]" objectStore="application_data"/>
		<choice doc:name="psid exists?" doc:id="d26e6757-7078-4f41-8c57-34f4d8ba3031" >
			<when expression="#[payload == true]" >
				<os:remove doc:name="Remove" doc:id="6d3e237d-2e51-4e01-96dd-c632c0a79803" key="#[vars.psid]" objectStore="application_data" />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="customer not exists" doc:id="16206b1c-eeb9-4ced-962d-1a3c02ada890" message="Customer not exists"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="Reply with login link" doc:id="bcd16921-878c-479a-b927-a860fe2f0d5d" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
import * from dw::core::Binaries
var stateRaw = {
	psid: vars.psid,
	action: "logout"
}
var stateString = write(stateRaw, "application/json")
var stateBase64UrlEncoded = toBase64(stateString)
var loginUrl = p('user.login.url')
---
{
	recipient: {
		id: vars.psid
	},
	message:{
    	attachment:{
			"type":"template",
			payload:{
			    template_type:"button",
				text: "Please provide information about your user following the link below.",
				buttons:[{
			    	"type":"web_url",
					"url":"$(loginUrl)?origin=bot&state=$(stateBase64UrlEncoded)",
					"title":"Login or Change user"
			    }]
			}
    	}
    }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="Call-Facebook-API" doc:id="535ae84e-a542-4794-9e41-55a2b22e3a84" name="Call-Facebook-API"/>
	</flow>
	<flow name="after-login" doc:id="4d7b6ec9-c170-4fdf-b573-95e277716d78" >
		<http:listener doc:name="Listener" doc:id="5406768b-5e59-4d36-b569-fed6c2a5309e" config-ref="HTTP_Listener_config" path="/callback" allowedMethods="GET,OPTIONS,POST"/>
		<ee:transform doc:name="extract useful data" doc:id="4ea5c2a6-5f25-47fc-87e4-c75d68f2a701" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="customerData" ><![CDATA[%dw 2.0
output application/java
import * from dw::core::Binaries
var accessTokenPayloadBase64UrlEncoded = (payload.access_token splitBy '.')[1]
var accessTokenPayloadString = fromBase64(accessTokenPayloadBase64UrlEncoded)
var accessTokenPayload = read(accessTokenPayloadString, 'application/json')

var idTokenPayloadBase64UrlEncoded = (payload.id_token splitBy '.')[1]
var idTokenPayloadString = fromBase64(idTokenPayloadBase64UrlEncoded)
var idTokenPayload = read(idTokenPayloadString, 'application/json')
fun toUrlSafeCustomerId(value) = value replace '|' with '_' 
---
{
	customerId: toUrlSafeCustomerId(accessTokenPayload.sub),
	psid: read(fromBase64(payload.state), 'application/json').psid,
	action: read(fromBase64(payload.state), 'application/json').action,
	accessToken: payload.access_token,
	name: idTokenPayload.name,
	givenName: idTokenPayload.given_name,
	lastName: idTokenPayload.family_name	
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<os:store doc:name="save customerId under psid key" doc:id="32039c35-2fdf-4ea2-9492-fa2e1d4f1d93" key="#[vars.customerData.psid]" objectStore="application_data">
			<os:value ><![CDATA[#[vars.customerData]]]></os:value>
		</os:store>
		<choice doc:name="Choose action after login" doc:id="d5bac5b9-fa00-4c31-afd4-ec5ad407d743" >
			<when expression='#[vars.customerData.action == "order"]' >
				<ee:transform doc:name="Prepare message to send to FB" doc:id="ada86e71-9fe5-43fb-bb8a-440149de817c" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	recipient: {
		id: vars.customerData.psid
	},
	message: {
		text: "Thank you for linking your account, let me now show you your last order..."
	}
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<flow-ref doc:name="Call-Facebook-API" doc:id="ef8a936b-2b96-4842-b84d-d42cdf79895e" name="Call-Facebook-API"/>
				<set-variable value="#[vars.customerData.psid]" doc:name="set psid" doc:id="d47130c4-287b-429e-b88b-150c876efc26" variableName="psid"/>
				<flow-ref doc:name="orders-response" doc:id="f53eef5c-1837-4595-81a0-8a2533296e25" name="orders-response"/>
			</when>
			<otherwise >
				<ee:transform doc:name="Prepare logged in message" doc:id="6b1d69d8-e89c-4e68-9f28-3c0d7d36f820" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	recipient: {
		id: vars.customerData.psid
	},
	message: {
		text: "Thank you for linking your account! Is there anything I can help you with?"
	}
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<flow-ref doc:name="Call-Facebook-API" doc:id="159e0fc6-5240-4899-844d-b779d99b813f" name="Call-Facebook-API"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="facebook-bot-site" doc:id="5cf3e879-889f-41c4-8993-5b936d00c657" >
		<http:listener doc:name="Listener" doc:id="7ee31209-06c9-4cae-8e6c-8c6783ae378e" config-ref="HTTP_Listener_config" path="/"/>
		<logger level="DEBUG" doc:name="Logger" doc:id="318a3bf0-cf2b-4edb-bf66-8cd0cc7cb93a" message="#[payload]"/>
		<set-payload value="Hello Facebook Bot!" doc:name="Set Payload" doc:id="317a2e6f-4215-4911-89a5-f4f7a3f92176" />
	</flow>
</mule>

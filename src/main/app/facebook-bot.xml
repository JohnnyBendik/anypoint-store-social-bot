<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    
    <http:listener-config name="HTTPS_Listener_Configuration" protocol="HTTPS" host="0.0.0.0" port="${https.port}" doc:name="HTTP Listener Configuration">
        <tls:context>
            <tls:key-store type="jks" path="${keystore.location}" keyPassword="${key.password}" password="${keystore.password}" alias= "${key.alias}"/>
        </tls:context>
    </http:listener-config>
    <http:request-config name="Call_Send_API_Request_Configuration" protocol="HTTPS" host="graph.facebook.com" port="443" doc:name="HTTP Request Configuration" basePath="/">
        <tls:context>
            <tls:key-store type="jks" path="${keystore.location}" keyPassword="${key.password}" password="${keystore.password}" alias= "${key.alias}"/>
        </tls:context>
    </http:request-config>
    <http:request-config name="Order_Request_Configuration" host="${order-api.host}" port="${order-api.port}" basePath="${order-api.basePath}" doc:name="HTTP Request Configuration" >    	
    </http:request-config>
	<flow name="webhook-flow">
        <http:listener config-ref="HTTPS_Listener_Configuration" path="/webhook" doc:name="HTTP"/>
        <choice doc:name="Operation?">
            <when expression="#[message.inboundProperties.'http.method' == 'POST']">
                <dw:transform-message doc:name="transform input">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
                </dw:transform-message>
                <choice doc:name="Choice">
                    <when expression="#[!(payload.entry[0].messaging[0].message == null)]">
                        <choice doc:name="How is your response on message?">
                            <when expression="#[payload.entry[0].messaging[0].message.text.contains(&quot;order&quot;)]">
                                <flow-ref name="orders-response" doc:name="orders-response"/>
                            </when>
                            <when expression="#[payload.entry[0].messaging[0].message.text.contains(&quot;Hi&quot;)]">
                                <flow-ref name="greeting-response" doc:name="greeting-response"/>
                            </when>
                            <otherwise>
                                <flow-ref name="echo-response" doc:name="echo-response"/>
                            </otherwise>
                        </choice>
                        <logger message="#[payload:java.lang.String]" level="INFO" doc:name="Logger"/>
                        <http:request config-ref="Call_Send_API_Request_Configuration" path="me/messages" method="POST" doc:name="Call Facebook Send API">
                            <http:request-builder>
                                <http:query-param paramName="access_token" value="${access_token}"/>
                            </http:request-builder>
                        </http:request>
                        <logger message="#[payload:java.lang.String]" level="INFO" doc:name="Logger"/>
                    </when>
                    <otherwise>
                        <logger message="POSTBACK - #[payload]" level="INFO" doc:name="Logger"/>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <set-payload value="#[message.inboundProperties.'http.query.params'.['hub.challenge']]" doc:name=" Respond with challenge"/>
            </otherwise>
        </choice>
        
    </flow>
    <flow name="echo-response">
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message metadata:id="6919ff9e-25d3-4988-8d16-4921f6ef7e27" doc:name="Response Message">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	recipient: {
		id: payload.entry.messaging[0].sender.id[0]
	},
	message: {
		text: "If you want to see your orders, please write keyword:  order." when payload.entry.messaging[0].message.text[0] !=null otherwise 'No Message'
	}
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
     <flow name="greeting-response">
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message metadata:id="6919ff9e-25d3-4988-8d16-4921f6ef7e27" doc:name="Response Message">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	recipient: {
		id: payload.entry.messaging[0].sender.id[0]
	},
	message: {
		text: "Hi, Anton Kravchenko\n How can we help you today?" when payload.entry.messaging[0].message.text[0] !=null otherwise 'No Message'
	}
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="orders-response">
        <set-variable variableName="input" value="#[payload]" doc:name="Variable"/>
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <flow-ref name="delivery-response" doc:name="delivery-response"/>
        <flow-ref name="list-response" doc:name="list-response"/>


        <http:request config-ref="Order_Request_Configuration" path="/orders" method="GET" doc:name="GET /orders"/>

        <http:request config-ref="Order_Request_Configuration" path="/orders/{orderId}/orderItems" method="GET" doc:name="GET /orders/{orderId}/orderItems">
            <http:request-builder>
                <http:uri-param paramName="orderId" value="#[dw( ' (payload.orders[0].href splitBy &quot;/&quot;) [-1]' )]"/>
            </http:request-builder>
        </http:request>
        <logger message="output of GET /orders/{id}/orderItems:  #[message.payloadAs(java.lang.String)]" level="INFO" doc:name="Log OrderItems"/>

        <dw:transform-message doc:name="intermediate mapping">
            <dw:input-payload/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	orderId: (payload.'_links'.salesOrder.href splitBy '/')[-1],
	products: payload.orderItems map {
		productId: $.item.productId,
		url: ("http://anypoint-store-webportal-dev.surge.sh/product/" ++  $.item.productId),
		quantity: $.quantity.amount,
		price: ($.quantity.amount * $.itemUnitPrice.amount.currencyValue) ++ " " ++ $.itemUnitPrice.amount.currency
	}
	
	
}
]]></dw:set-payload>
        </dw:transform-message>

        <dw:transform-message doc:name="Response Message" >
        <dw:input-payload doc:sample="messageData.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	recipient: {
		id: flowVars.input.entry.messaging[0].sender.id[0]
	},
	message:{
      attachment: {
			type: "template",
			payload: {
				template_type: "list",
				top_element_style: "compact",
				elements:[
					{
						title: "Anypoint Smart Slim Micro Stripe Shirt",
						image_url: "https://launderkart.com/wp-content/uploads/2016/07/Shirt.jpg",
						subtitle: "Quantity: $(payload.products[0].quantity)\n" ++ "Price: $(payload.products[0].price)",
						buttons: [{
							title: "Product Details",
							type: "web_url",
							url: payload.products[0].url,
							webview_height_ratio: "tall"
							}]
					},	
					{
						title: "Men's Chino Jogger Pants",
						image_url: "https://images-na.ssl-images-amazon.com/images/I/61hUUA%2BaEQL._UX342_.jpg",
						subtitle: "Quantity: $(payload.products[1].quantity)\n" ++ "Price: $(payload.products[1].price)",
						buttons: [{
							title: "Product Details",
							type: "web_url",
							url: payload.products[1].url,
							webview_height_ratio: "tall"
							}]
					}]			
			}
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="delivery-response">
        <dw:transform-message doc:name="Response Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	recipient: {
		id: flowVars.input.entry.messaging[0].sender.id[0]
	},
	message: {
	      text: "Here are your order details:\n\n" ++
	      		"Arriving: Thursday, June 8\n" ++
	      		"Carrier: USPS\n" ++
	      		"Shipped to: Anton Kravchenko\n" ++ 
	       		"   77 Geary Street, #400, MuleSoft\n" ++
		   		"   94108, San Francisco\n" ++
		   		"   California, USA\n\n"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <http:request config-ref="Call_Send_API_Request_Configuration" path="me/messages" method="POST" doc:name="Call Facebook Send API">
            <http:request-builder>
                <http:query-param paramName="access_token" value="${access_token}"/>
            </http:request-builder>
        </http:request>
        <logger message="#[payload:java.lang.String]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="list-response">
        <dw:transform-message doc:name="Response Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	recipient: {
		id: flowVars.input.entry.messaging[0].sender.id[0]
	},
	message: {
	      text: "Below is the list of ordered products:\n"
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <http:request config-ref="Call_Send_API_Request_Configuration" path="me/messages" method="POST" doc:name="Call Facebook Send API">
            <http:request-builder>
                <http:query-param paramName="access_token" value="${access_token}"/>
            </http:request-builder>
        </http:request>
        <logger message="#[payload:java.lang.String]" level="INFO" doc:name="Logger"/>
    </flow>
	<flow name="facebook-bot-site">
        <http:listener config-ref="HTTPS_Listener_Configuration" path="/" doc:name="HTTP"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <set-payload value="Hello Facebook Bot!" doc:name="Set Payload"/>
    </flow>
</mule>
